{% comment %}
  page.return-request.liquid â€“ Full-page return request (no modal)
{% endcomment %}

{% layout 'theme' %}

<div class="page-width" style="max-width: 800px; margin: 2rem auto; padding: 0 1rem;">
  <h1 style="font-size: 1.75rem; font-weight: 600; margin-bottom: 1.5rem; text-align: center;">Request a Return</h1>

  <!-- STEP 1: Customer Info -->
  <div id="step1">
    <form id="customer-lookup-form" style="display:flex;flex-direction:column;gap:1rem;">
      <div class="form-row" style="display:grid;grid-template-columns:1fr;gap:1rem;">
        <div class="form-group">
          <label style="display:block;font-size:.875rem;font-weight:500;color:#374151;margin-bottom:.25rem;"
            >First Name *</label
          >
          <input
            type="text"
            name="first_name"
            required
            style="width:100%;padding:.5rem;border:1px solid #d1d5db;border-radius:.375rem;font-size:.875rem;"
          >
          <div class="invalid" style="display:none;color:#dc3545;font-size:.75rem;margin-top:.25rem;">Required</div>
        </div>
        <div class="form-group">
          <label style="display:block;font-size:.875rem;font-weight:500;color:#374151;margin-bottom:.25rem;"
            >Last Name *</label
          >
          <input
            type="text"
            name="last_name"
            required
            style="width:100%;padding:.5rem;border:1px solid #d1d5db;border-radius:.375rem;font-size:.875rem;"
          >
          <div class="invalid" style="display:none;color:#dc3545;font-size:.75rem;margin-top:.25rem;">Required</div>
        </div>
      </div>
      <div class="form-group">
        <label style="display:block;font-size:.875rem;font-weight:500;color:#374151;margin-bottom:.25rem;"
          >Email *</label
        >
        <input
          type="email"
          name="email"
          required
          style="width:100%;padding:.5rem;border:1px solid #d1d5db;border-radius:.375rem;font-size:.875rem;"
        >
        <div class="invalid" style="display:none;color:#dc3545;font-size:.75rem;margin-top:.25rem;">
          Valid email required
        </div>
      </div>
      <button
        type="submit"
        id="lookup-btn"
        style="background:#007bff;color:#fff;padding:.75rem;border-radius:.375rem;font-weight:500;border:none;cursor:pointer;"
      >
        <span class="txt">Find My Orders</span>
        <span class="load" style="display:none;">Searching...</span>
      </button>
    </form>
    <div id="lookup-msg" style="margin-top:1rem;"></div>
  </div>

  <!-- STEP 2: Order Selection -->
  <div id="step2" style="display:none;">
    <div id="orders-list"></div>
    <div id="no-orders" style="display:none;color:#6c757d;font-style:italic;">No orders found in the last 30 days.</div>
    <button
      id="back-to-step1"
      style="margin-top:1rem;background:#6c757d;color:#fff;padding:.5rem 1rem;border-radius:.375rem;border:none;cursor:pointer;"
    >
      Back
    </button>
  </div>

  <!-- STEP 3: Return Details -->
  <div id="step3" style="display:none;">
    <form id="return-submit-form">
      <input type="hidden" name="order_id" id="selected-order-id">
      <div id="selected-items"></div>

      <div class="form-group" style="margin-top:1.5rem;">
        <label style="display:block;font-size:.875rem;font-weight:500;color:#374151;margin-bottom:.5rem;"
          >Refund Preference *</label
        >
        <div style="display:flex;gap:1.5rem;flex-wrap:wrap;">
          <label style="display:flex;align-items:center;cursor:pointer;">
            <input type="radio" name="refund_method" value="store_credit" required style="margin-right:.5rem;"> Store
            Credit
          </label>
          <label style="display:flex;align-items:center;cursor:pointer;">
            <input type="radio" name="refund_method" value="original_payment" required style="margin-right:.5rem;">
            Original Payment
          </label>
        </div>
        <div class="invalid" style="display:none;color:#dc3545;font-size:.75rem;margin-top:.25rem;">Required</div>
      </div>

      <div class="form-group" style="margin-top:1rem;">
        <label style="display:block;font-size:.875rem;font-weight:500;color:#374151;margin-bottom:.25rem;"
          >Additional Notes (Optional)</label
        >
        <textarea
          name="message"
          style="width:100%;padding:.5rem;border:1px solid #d1d5db;border-radius:.375rem;font-size:.875rem;resize:vertical;min-height:80px;"
        ></textarea>
      </div>

      <div style="display:flex;gap:1rem;margin-top:1.5rem;">
        <button
          type="button"
          id="back-to-step2"
          style="background:#6c757d;color:#fff;padding:.75rem 1rem;border-radius:.375rem;border:none;cursor:pointer;flex:1;"
        >
          Back
        </button>
        <button
          type="submit"
          style="background:#dc3545;color:#fff;padding:.75rem 1rem;border-radius:.375rem;border:none;cursor:pointer;flex:2;"
        >
          <span class="txt">Submit Return Request</span>
          <span class="load" style="display:none;">Submitting...</span>
        </button>
      </div>
    </form>
    <div id="submit-msg" style="margin-top:1rem;"></div>
  </div>
</div>

<style>
  input:focus, select:focus, textarea:focus {
    outline:none;
    border-color:#dc3545;
    box-shadow:0 0 0 3px rgba(220,53,69,.2);
  }
  .is-invalid {border-color:#dc3545 !important;}
  .is-invalid ~ .invalid {display:block;}
  @media (min-width:768px){
    .form-row{grid-template-columns:1fr 1fr !important;}
  }

  /* ----- IMAGE ROWS ----- */
  .return-item-row {
    display:flex;
    align-items:center;
    gap:1rem;
    padding:.75rem;
    border:1px solid #dee2e6;
    border-radius:.375rem;
    background:#fdfdfe;
    margin-bottom:.5rem;
  }
  .return-item-img {
    width:80px;
    height:80px;
    object-fit:cover;
    border-radius:.25rem;
    flex-shrink:0;
    background:#f8f9fa;
  }
  .return-item-label {
    display:flex;
    align-items:center;
    cursor:pointer;
    flex:1;
    font-size:.95rem;
    line-height:1.4;
  }
  .return-item-label input {margin-right:.5rem;}
  @media (max-width:768px){
    .return-item-row{flex-direction:column;text-align:center;}
    .return-item-img{width:60px;height:60px;}
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const step1 = document.getElementById('step1');
    const step2 = document.getElementById('step2');
    const step3 = document.getElementById('step3');

    function showStep(n) {
        step1.style.display = n === 1 ? 'block' : 'none';
        step2.style.display = n === 2 ? 'block' : 'none';
        step3.style.display = n === 3 ? 'block' : 'none';
    }

    // Back buttons
    document.getElementById('back-to-step1')?.addEventListener('click', () => showStep(1));
    document.getElementById('back-to-step2')?.addEventListener('click', () => showStep(2));

    // === STEP 1: Lookup ===
    document.getElementById('customer-lookup-form')?.addEventListener('submit', function (e) {
        e.preventDefault();
        const form = this;
        const btn = document.getElementById('lookup-btn');
        const txt = btn.querySelector('.txt');
        const load = btn.querySelector('.load');
        const msg = document.getElementById('lookup-msg');

        let valid = true;
        form.querySelectorAll('input[required]').forEach((input) => {
            const val = input.value.trim();
            if (!val || (input.type === 'email' && !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(val))) {
                input.classList.add('is-invalid');
                valid = false;
            } else {
                input.classList.remove('is-invalid');
            }
        });
        if (!valid) return;

        btn.disabled = true;
        txt.style.display = 'none';
        load.style.display = 'inline';

        fetch('https://custom-shopify.onrender.com/api/returns/lookup', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams(new FormData(form)),
        })
            .then((r) => r.json())
            .then((data) => {
                if (!data.orders || data.orders.length === 0) {
                    document.getElementById('no-orders').style.display = 'block';
                    document.getElementById('orders-list').innerHTML = '';
                    showStep(2);
                    return;
                }
                renderOrders(data.orders);
                showStep(2);
            })
            .catch(() => {
                msg.innerHTML = `<div style="color:#dc3545;background:#fee2e2;padding:.75rem;border-radius:.375rem;">Server error</div>`;
            })
            .finally(() => {
                btn.disabled = false;
                txt.style.display = 'inline';
                load.style.display = 'none';
            });
    });

    // === RENDER ORDERS WITH IMAGES ===
    function renderOrders(orders) {
        const list = document.getElementById('orders-list');
        list.innerHTML = '';
        document.getElementById('no-orders').style.display = 'none';

        orders.forEach((order) => {
            // Header
            const header = document.createElement('div');
            header.style = `background:#f8f9fa;padding:1rem;border-radius:.5rem;margin-bottom:1rem;text-align:center;border:1px solid #dee2e6;`;
            header.innerHTML = `
          <h2 style="margin:0 0 .5rem 0;font-size:1.25rem;color:#374151;">Request a Return</h2>
          <p style="margin:0;font-size:1rem;color:#6c757d;">
            <strong>Order ${order.name}</strong> (${new Date(order.created_at).toLocaleDateString()})
          </p>`;
            list.appendChild(header);

            // Items wrapper
            const wrapper = document.createElement('div');
            wrapper.style = 'margin-bottom:1.5rem;';

            order.line_items.forEach((item) => {
                const row = document.createElement('div');
                row.className = 'return-item-row';

                const imgSrc =
                    item.image_src || 'https://store.waldoch.com/cdn/shop/files/truck_and_vans_accessories-01_80x80.png';

                row.innerHTML = `
            <img src="${imgSrc}" alt="${item.title}" class="return-item-img"
                 onerror="this.src='https://store.waldoch.com/cdn/shop/files/truck_and_vans_accessories-01_80x80.png'">
            <label class="return-item-label">
              <input type="checkbox" class="select-item"
                     data-order-id="${order.id}"
                     data-item-id="${item.id}"
                     data-title="${item.title}"
                     data-sku="${item.sku || ''}">
              <span>${item.title}
                ${item.variant_title ? ` (${item.variant_title})` : ''}
                Ã—${item.quantity}
              </span>
            </label>`;
                wrapper.appendChild(row);
            });

            list.appendChild(wrapper);
        });

        // Proceed button (once)
        if (!document.getElementById('proceed-btn')) {
            const btn = document.createElement('button');
            btn.id = 'proceed-btn';
            btn.textContent = 'Continue with Selected Items';
            btn.style =
                'margin-top:1rem;background:#007bff;color:#fff;padding:.75rem;border-radius:.375rem;border:none;cursor:pointer;width:100%;';
            btn.onclick = proceedToStep3;
            list.appendChild(btn);
        }
    }

    function proceedToStep3() {
        const selected = Array.from(document.querySelectorAll('.select-item:checked')).map((cb) => ({
            order_id: cb.dataset.orderId,
            item_id: cb.dataset.itemId,
            title: cb.dataset.title,
            sku: cb.dataset.sku,
        }));

        if (selected.length === 0) return alert('Please select at least one item.');
        const orderIds = [...new Set(selected.map((s) => s.order_id))];
        if (orderIds.length > 1) return alert('Please select items from one order only.');

        document.getElementById('selected-order-id').value = orderIds[0];
        renderReturnItems(selected);
        showStep(3);
    }

    function renderReturnItems(items) {
        const container = document.getElementById('selected-items');
        container.innerHTML = '';
        items.forEach((it, idx) => {
            container.innerHTML += `
          <div style="border:1px solid #dee2e6;border-radius:.5rem;padding:1rem;margin-bottom:1rem;background:#fdfdfe;">
            <strong>${it.title}</strong> ${it.sku ? `<small style="color:#6c757d;">(SKU: ${it.sku})</small>` : ''}
            <input type="hidden" name="items[${idx}][line_item_id]" value="${it.item_id}">
            <div style="margin-top:.75rem;">
              <label style="display:block;font-size:.875rem;font-weight:500;color:#374151;margin-bottom:.25rem;">Reason for Return *</label>
              <select name="items[${idx}][reason]" required style="width:100%;padding:.5rem;border:1px solid #d1d5db;border-radius:.375rem;font-size:.875rem;">
                <option value="" disabled selected>Select reason</option>
                <option value="ordered_wrong">Ordered wrong item</option>
                <option value="duplicate">Duplicate order</option>
                <option value="wrong_part">Wrong part</option>
                <option value="damaged">Damaged in shipping</option>
                <option value="no_fit">Did not fit</option>
                <option value="changed_mind">Changed my mind</option>
              </select>
              <div class="invalid" style="display:none;color:#dc3545;font-size:.75rem;margin-top:.25rem;">Required</div>
            </div>
          </div>`;
        });
    }

    // === STEP 3: Submit ===
    document.getElementById('return-submit-form')?.addEventListener('submit', async function (e) {
        e.preventDefault();
        const form = this;
        const btn = form.querySelector('button[type="submit"]');
        const txt = btn.querySelector('.txt');
        const load = btn.querySelector('.load');
        const msg = document.getElementById('submit-msg');

        // Validate
        let valid = true;
        form.querySelectorAll('select[required]').forEach((sel) => {
            if (!sel.value) {
                sel.classList.add('is-invalid');
                valid = false;
            } else sel.classList.remove('is-invalid');
        });
        if (!form.querySelector('input[name="refund_method"]:checked')) {
            form.querySelector('.form-group .invalid').style.display = 'block';
            valid = false;
        }
        if (!valid) return;

        btn.disabled = true;
        txt.style.display = 'none';
        load.style.display = 'inline';

        // Build structured payload
        const order_id = document.getElementById('selected-order-id').value;
        const refund_method = form.querySelector('input[name="refund_method"]:checked')?.value;
        const message = form.querySelector('textarea[name="message"]')?.value || '';

        const items = Array.from(form.querySelectorAll('[name^="items["]'))
            .reduce((acc, input) => {
                const match = input.name.match(/items\[(\d+)\]\[(.+)\]/);
                if (match) {
                    const idx = parseInt(match[1]);
                    const key = match[2];
                    acc[idx] = acc[idx] || {};
                    acc[idx][key] = input.value;
                }
                return acc;
            }, []);

        const payload = { order_id, refund_method, message, items };

        try {
            const res = await fetch('https://custom-shopify.onrender.com/api/returns/submit', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload),
            });

            const data = await res.json();

            if (res.ok && data.success) {
                msg.innerHTML = `<div style="color:#166534;background:#dcfce7;padding:.75rem;border-radius:.375rem;">
        ${data.message || 'Return request submitted successfully!'}
      </div>`;
                setTimeout(() => {
                    window.location.href = '/pages/return-thank-you';
                }, 2000);
            } else {
                throw new Error(data.message || 'Submission failed');
            }
        } catch (err) {
            console.error('Submit error:', err);
            msg.innerHTML = `<div style="color:#dc3545;background:#fee2e2;padding:.75rem;border-radius:.375rem;">
      ${err.message || 'Error submitting return'}
    </div>`;
        } finally {
            btn.disabled = false;
            txt.style.display = 'inline';
            load.style.display = 'none';
        }
    });
});
</script>
